{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","name","status","state","setState","display","setDisplay","obj","start","inProgress","done","forEach","el","push","onDragStart","e","handleDragStart","draggable","className","setTimeout","dataTransfer","setData","target","style","background","handleDragOver","preventDefault","handleOnDrop","id","getData","list","filter","border","handleDragEnter","borderRadius","handleDragLeave","onDragLeave","onDragEnter","onDrop","onDragOver","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA6FeA,MAjFf,WAAgB,IAAD,EACeC,mBAAsB,CAAC,CAACC,KAAM,QAASC,OAAQ,WAD9D,mBACJC,EADI,KACGC,EADH,OAEmBJ,oBAAkB,GAFrC,mBAEJK,EAFI,KAEKC,EAFL,KAGPC,EAAkB,CAClBC,MAAO,GACPC,WAAY,GACZC,KAAM,IAEVP,EAAMQ,SAAQ,SAACC,GAEXL,EAAIK,EAAGV,QAAQW,KAAK,qBAAKC,YAAa,SAACC,GAAD,OAAMC,EAAgBD,EAAGH,EAAGX,OAAOgB,WAAS,EAACC,UAAWb,EAAQ,YAAY,OAA9F,SAAuGO,EAAGX,WAElI,IAAMe,EAAkB,SAACD,EAAmCd,GACxDkB,YAAW,WACPb,GAAW,MAEfS,EAAEK,aAAaC,QAAQ,KAAKpB,GAE5Bc,EAAEO,OAAOC,MAAMC,WAAa,UAE1BC,EAAiB,SAACV,GACpBA,EAAEW,kBAEAC,EAAe,SAACZ,EAAmCb,GACrD,IAAI0B,EAAKb,EAAEK,aAAaS,QAAQ,MAC5BC,EAAO3B,EAAM4B,QAAO,SAAAnB,GAIpB,OAHGA,EAAGX,OAAS2B,IACXhB,EAAGV,OAAOA,GAEPU,KAGXG,EAAEO,OAAOC,MAAMS,OAAQ,GACvB5B,EAAS0B,GACTxB,GAAW,IAGT2B,EAAkB,SAAClB,GAErBA,EAAEO,OAAOC,MAAMS,OAAQ,mBAEvBjB,EAAEO,OAAOC,MAAMW,aAAc,QAE3BC,EAAkB,SAACpB,GAErBA,EAAEO,OAAOC,MAAMS,OAAQ,GAEvBjB,EAAEO,OAAOC,MAAMC,WAAa,IAGhC,OACI,sBAAKN,UAAU,MAAf,UACI,sBAAKA,UAAW,MAAhB,UACI,qBAAKA,UAAW,mBAAhB,oBACA,qBAAKA,UAAW,sBAAhB,yBACA,qBAAKA,UAAW,kBAAhB,qBAEJ,sBAAKA,UAAW,MAAhB,UACI,qBACIkB,YAAa,SAACrB,GAAD,OAAKoB,EAAgBpB,IAClCsB,YAAa,SAACtB,GAAD,OAAKkB,EAAgBlB,IAClCuB,OAAQ,SAACvB,GAAD,OAAMY,EAAaZ,EAAE,UAC7BwB,WAAY,SAACxB,GAAD,OAAMU,EAAeV,IACjCG,UAAW,cALf,SAK+BX,EAAIC,QACnC,qBACI4B,YAAa,SAACrB,GAAD,OAAKoB,EAAgBpB,IAClCsB,YAAa,SAACtB,GAAD,OAAKkB,EAAgBlB,IAClCuB,OAAQ,SAACvB,GAAD,OAAMY,EAAaZ,EAAE,eAC7BwB,WAAY,SAACxB,GAAD,OAAMU,EAAeV,IACjCG,UAAW,cALf,SAK+BX,EAAIE,aACnC,qBACI2B,YAAa,SAACrB,GAAD,OAAKoB,EAAgBpB,IAClCsB,YAAa,SAACtB,GAAD,OAAKkB,EAAgBlB,IAClCuB,OAAQ,SAACvB,GAAD,OAAMY,EAAaZ,EAAE,SAC7BwB,WAAY,SAACxB,GAAD,OAAMU,EAAeV,IACjCG,UAAW,cALf,SAK+BX,EAAIG,cCzEpC8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.23a9f4ac.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\n\ntype stateType = {\n    name: string;\n    status: string;\n}\ntype statusType = {\n    [key: string]: stateType[]\n}\n\nfunction App() {\n    const [state, setState] = useState<stateType[]>([{name: 'Damir', status: 'start'}])\n    const [display, setDisplay] = useState<boolean>(false)\n    let obj: statusType = {\n        start: [],\n        inProgress: [],\n        done: []\n    }\n    state.forEach((el) => {\n        // @ts-ignore\n        obj[el.status].push(<div onDragStart={(e)=> handleDragStart(e, el.name)} draggable className={display?'item hide':'item'}>{el.name}</div>);\n    })\n    const handleDragStart = (e:React.DragEvent<HTMLDivElement>, name:string) => {\n        setTimeout(()=>{\n            setDisplay(true)\n        })\n        e.dataTransfer.setData('id',name)\n        // @ts-ignore\n        e.target.style.background = 'yellow'\n    }\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault()\n    }\n    const handleOnDrop = (e:React.DragEvent<HTMLDivElement>, status:string) => {\n        let id = e.dataTransfer.getData('id')\n        let list = state.filter(el=>{\n            if(el.name === id){\n                el.status=status\n            }\n            return el\n        })\n        // @ts-ignore\n        e.target.style.border =''\n        setState(list)\n        setDisplay(false)\n\n    }\n    const handleDragEnter = (e:React.DragEvent<HTMLDivElement>) => {\n        // @ts-ignore\n        e.target.style.border ='2px solid purple'\n        // @ts-ignore\n        e.target.style.borderRadius ='20px'\n    }\n    const handleDragLeave = (e:React.DragEvent<HTMLDivElement>) => {\n        // @ts-ignore\n        e.target.style.border =''\n        // @ts-ignore\n        e.target.style.background = ''\n    }\n\n    return (\n        <div className=\"App\">\n            <div className={'row'}>\n                <div className={'col-header start'}> Start</div>\n                <div className={'col-header progress'}>In Progress</div>\n                <div className={'col-header done'}>Done</div>\n            </div>\n            <div className={'row'}>\n                <div\n                    onDragLeave={(e)=>handleDragLeave(e)}\n                    onDragEnter={(e)=>handleDragEnter(e)}\n                    onDrop={(e)=> handleOnDrop(e,'start')}\n                    onDragOver={(e)=> handleDragOver(e)}\n                    className={'placeholder'}>{obj.start}</div>\n                <div\n                    onDragLeave={(e)=>handleDragLeave(e)}\n                    onDragEnter={(e)=>handleDragEnter(e)}\n                    onDrop={(e)=> handleOnDrop(e,'inProgress')}\n                    onDragOver={(e)=> handleDragOver(e)}\n                    className={'placeholder'}>{obj.inProgress}</div>\n                <div\n                    onDragLeave={(e)=>handleDragLeave(e)}\n                    onDragEnter={(e)=>handleDragEnter(e)}\n                    onDrop={(e)=> handleOnDrop(e,'done')}\n                    onDragOver={(e)=> handleDragOver(e)}\n                    className={'placeholder'}>{obj.done}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}